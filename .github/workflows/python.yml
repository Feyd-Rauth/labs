name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    paths:
      - app_python/**
      - .github/workflows/python.yml
  
defaults:
  run:
    working-directory: ./app_python

permissions:
  contents: read

jobs:
  lint:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with pylint
      run: |
        pylint $(git ls-files '*.py')
  
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: [lint]
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      env:
        PYTHONPATH: $PYTHONPATH:/.
      run: |
        pytest
        
  container:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v2

      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: feydrauth/msctime:latest
          cache-from: type=registry,ref=feydrauth/msctime:buildcache
          cache-to: type=registry,ref=feydrauth/msctime:buildcache,mode=max
  
  snyk-python:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - uses: actions/checkout@v2
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python-3.8@master
      continue-on-error: true # To make sure that SARIF upload gets called
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: app_python --skip-unresolved --sarif-file-output=snyk.sarif
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
          
  snyk-docker:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: [container]
    steps:
    - uses: actions/checkout@v2
    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: feydrauth/msctime:latest
        args: --file=app_python/Dockerfile --sarif-file-output=snyk.sarif
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif 
